--- a/ambertools_tmpdir/AmberTools/src/cpptraj/configure	2020-04-28 09:19:43.000000000 +0800
+++ b/ambertools_tmpdir/AmberTools/src/cpptraj/configure	2022-02-14 11:29:02.000000000 +0800
@@ -10,7 +10,7 @@
 #-------------------------------------------------------------------------------
 # Print simple help message
 UsageSimple() {
-  echo "Usage: ./configure <OPTIONS> [gnu | intel | pgi | clang | cray]"
+  echo "Usage: ./configure <OPTIONS> [gnu | intel | pgi | clang | cray | cray-shasta-gnu | cray-shasta-cray | cray-shasta-aocc]"
   echo "  OPTIONS:"
   echo "    --help         : Display this message."
   echo "    --prefix <dir> : Install CPPTRAJ to specified directory (default is this directory)."
@@ -142,12 +142,14 @@
 
 # ----- External Libraries -----------------------
 # Total number of external libraries
-NLIB=14
+NLIB=16
 # Library indices
-# Original: FFT ARPACK LAPACK BLAS NETCDF PARANC BZIP ZIP READLINE XDRFILE
+# Original: FFT ARPACK LAPACK BLAS NETCDF NETCDFC NETCDFFORTRAN PARANC BZIP ZIP READLINE XDRFILE
 # Libraries containing definition of a function should appear *after*
 # any source files or object files which use it.
 LNETCDF=0
+LNETCDFC=14 # for separate netcdf fortran and c paths
+LNETCDFFORTRAN=15 # for separate netcdf fortran and c paths 
 LPARANC=1    # Parallel NetCDF
 LBZIP=2
 LTNGFILE=3   # This has to come before ZLIB since it depends on ZLIB
@@ -179,6 +181,26 @@
 LIB_LINK[$LNETCDF]='dynamic'         # How to link the library
 LIB_TYPE[$LNETCDF]='ld'              # ld = LDFLAGS, cpp = cpptraj, blank = special
 
+LIB_STAT[$LNETCDFC]='disabled'        # off, enabled, specified, amberopt, bundled, direct
+LIB_CKEY[$LNETCDFC]='netcdf-c'        # Command-line key for '-', '--with-' and '-no'
+LIB_HOME[$LNETCDFC]=''                # Library home directory (-L<home>)
+LIB_FLAG[$LNETCDFC]='-lnetcdf'        # Library linker flag
+LIB_STTC[$LNETCDFC]='libnetcdf.a'     # Expected static location relative to home
+LIB_D_ON[$LNETCDFC]='-DBINTRAJ'       # Directive if library on
+LIB_DOFF[$LNETCDFC]=''                # Directive if library off
+LIB_LINK[$LNETCDFC]='dynamic'         # How to link the library
+LIB_TYPE[$LNETCDFC]='ld'              # ld = LDFLAGS, cpp = cpptraj, blank = special
+
+LIB_STAT[$LNETCDFFORTRAN]='disabled'        # off, enabled, specified, amberopt, bundled, direct
+LIB_CKEY[$LNETCDFFORTRAN]='netcdf-fortran'  # Command-line key for '-', '--with-' and '-no'
+LIB_HOME[$LNETCDFFORTRAN]=''                # Library home directory (-L<home>)
+LIB_FLAG[$LNETCDFFORTRAN]='-lnetcdff'        # Library linker flag
+LIB_STTC[$LNETCDFFORTRAN]='libnetcdff.a'     # Expected static location relative to home
+LIB_D_ON[$LNETCDFFORTRAN]=''       # Directive if library on
+LIB_DOFF[$LNETCDFFORTRAN]=''                # Directive if library off
+LIB_LINK[$LNETCDFFORTRAN]='dynamic'         # How to link the library
+LIB_TYPE[$LNETCDFFORTRAN]='ld'              # ld = LDFLAGS, cpp = cpptraj, blank = special
+
 LIB_STAT[$LPARANC]='off'
 LIB_CKEY[$LPARANC]='pnetcdf'
 LIB_HOME[$LPARANC]=''
@@ -433,6 +455,16 @@
   TestProgram "  Checking NetCDF" "$CXX" "$CXXFLAGS ${LIB_INCL[$LNETCDF]}" testp.cpp "${LIB_FLAG[$LNETCDF]}"
 }
 
+TestNetcdfc() {
+  cat > testp.cpp <<EOF
+#include <cstdio>
+#include "netcdf.h"
+void unused() {int ncid; nc_open("foo.nc", 0, &ncid);}
+int main() { printf("Testing\n"); printf("%s\n",nc_strerror(0)); return 0; }
+EOF
+  TestProgram "  Checking NetCDF-C" "$CXX" "$CXXFLAGS ${LIB_INCL[$LNETCDFC]}" testp.cpp "${LIB_FLAG[$LNETCDFC]}"
+}
+
 TestPnetcdf() {
   cat > testp.cpp <<EOF
 #include <cstdio>
@@ -661,6 +693,7 @@
   if [ "${LIB_TEST[$LBZIP]}" = 'yes'     ] ; then TestBzlib ; fi
   if [ "${LIB_TEST[$LZIP]}" = 'yes'      ] ; then TestZlib ; fi
   if [ "${LIB_TEST[$LNETCDF]}" = 'yes'   ] ; then TestNetcdf ; fi
+  if [ "${LIB_TEST[$LNETCDFC]}" = 'yes'   ] ; then TestNetcdfc ; fi
   if [ "${LIB_TEST[$LPARANC]}" = 'yes'   ] ; then TestPnetcdf ; fi
   if [ "${LIB_TEST[$LBLAS]}" = 'yes'     ] ; then TestMathlib ; fi
   if [ "${LIB_TEST[$LARPACK]}" = 'yes'   ] ; then TestArpack ; fi
@@ -1104,13 +1137,35 @@
       if [ $USE_OPENMP -eq 0 ] ; then
         commonflags='-h noomp'
       fi
+      PLATFORM='cray'
+      ;;
+    "cray-shasta-gnu" )
+      if [ -z "$CC" ]; then CC=cc; fi
+      if [ -z "$CXX" ]; then CXX=CC; fi
+      if [ -z "$FC" ]; then FC=ftn; fi
+      CXXFLAGS="-O3 $CXXFLAGS"
+      CFLAGS="-O3 $CFLAGS"
+      hostflags=''
+      optflags=''
+      ompflag='-fopenmp'
+      warnflag='-Wall' # This will also print cautions
+      fwarnflag='-Wall'
+      freefmtflag='-fallow-argument-mismatch -ffree-form'
+      foptflags=''
+      FLINK='-lgfortran'
+      picflag='-fpic'
+      C11FLAG='-std=c++11'
+      if [ $USE_OPENMP -eq 0 ] ; then
+        commonflags=''
+      fi
+      PLATFORM='cray'
       ;;
     * ) Err "Unknown compilers: $1" ;;
   esac
   # Unless specified fortran warnflag is same as C/C++
   if [ -z "$fwarnflag" ] ; then fwarnflag=$warnflag ; fi
   # Change to MPI compiler wrappers if specified. Not needed for cray.
-  if [ $USE_MPI -ne 0 -a "$COMPILERS" != 'cray' ] ; then
+  if [ $USE_MPI -ne 0 -a "$COMPILERS" != 'cray' -a "$COMPILERS" != 'cray-shasta-gnu' -a "$COMPILERS" != 'cray-shasta-cray' -a "$COMPILERS" != 'cray-shasta-aocc' ] ; then
     if [ $USE_MPI -eq 1 ] ; then
       mpi_cc='mpicc'
       mpi_cxx='mpicxx'
@@ -1817,6 +1872,9 @@
     'intel'      ) COMPILERS=$KEY ;;
     'pgi'        ) COMPILERS=$KEY ;;
     'cray'       ) COMPILERS=$KEY ;;
+    'cray-shasta-gnu'       ) COMPILERS=$KEY ;;
+    'cray-shasta-cray'       ) COMPILERS=$KEY ;;
+    'cray-shasta-aocc'       ) COMPILERS=$KEY ;;
     'CXX'        ) CXX="$VALUE" ;;
     'CC'         ) CC="$VALUE" ;;
     'FC'         ) FC="$VALUE" ;;
