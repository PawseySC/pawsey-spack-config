# Copyright 2016-2022 Swiss National Supercomputing Centre (CSCS/ETH Zurich)
# ReFrame Project Developers. See the top-level LICENSE file for details.
#
# SPDX-License-Identifier: BSD-3-Clause


#
# This file was automatically generated by ReFrame based on 'setup_files/settings.py'.  # noqa: E501
# Most of this file taken from Deva's settings.py file in reframe/setup_files/ on bitbucket
#

site_configuration = {
    'systems': [
        {
            'name': 'setonix-q',
            'descr': 'Setonix-Q',
            'hostnames': ['setonix-01', 'setonix-02', 'setonix-03','setonix-04','setonix-09'],
            'modules_system': 'lmod',
            'partitions': [
                {
                    'name': 'login',
                    'descr': 'Setonix login node',
                    'scheduler': 'local',
                    'launcher': 'local',
                    'modules': [],
                    'access': [],
                    'max_jobs': 1,
                    'environs': [
                        'PrgEnv-gnu',
                        'PrgEnv-cray',
                        'PrgEnv-aocc',
                    ],
                    'processor': {
                        'num_cpus': 256,
                        'num_cpus_per_core': 2,
                        'num_cpus_per_socket': 128,
                        'num_sockets': 2
                    },
                },
                {
                    'name': 'quantum',
                    'descr': 'Setonix-Q GH200 (compute nodes) partition',
                    'scheduler': 'slurm',
                    'launcher': 'srun',
                    'modules': [],
                    'access': ['--partition=quantum'],
                    'max_jobs': 32,
                    'environs': [
                        'PrgEnv-nvidia',
                    ],
                    'processor': {
                        'num_cpus': 256,
                        'num_cpus_per_core': 2,
                        'num_cpus_per_socket': 128,
                        'num_sockets': 2
                    },
                },
                {
                    'name': 'copy',
                    'descr': 'Setonix copy (data mover) nodes',
                    'scheduler': 'slurm',
                    'launcher': 'srun',
                    'modules': [],
                    'access': ['--partition=copy'],
                    'max_jobs': 1,
                    'environs': [
                        'PrgEnv-gnu',
                        'PrgEnv-cray',
                        'PrgEnv-aocc',
                    ],
                },
            ]
        },
    ],
    'environments': [
        {
            'name': 'PrgEnv-cray',
            'target_systems': ['setonix', 'joey'],
            'modules': [
                'PrgEnv-cray',
                'cray-mpich/8.1.30',
            ]
        },
        {
            'name': 'PrgEnv-gnu',
            'target_systems': ['setonix', 'joey'],
            'modules': [
                'PrgEnv-gnu',
                'cray-mpich/8.1.30',
            ]
        },
        {
            'name': 'PrgEnv-aocc',
            'target_systems': ['setonix', 'joey'],
            'modules': [
                'PrgEnv-aocc',
                'cray-mpich/8.1.30',
            ]
        },
        {
            'name': 'PrgEnv-nvidia',
            'target_systems': ['setonix-q'],
            'modules': [
                'PrgEnv-nvidia',
                'cray-mpich',
                'craype-arm-grace',
            ]
        },
        {
            'name': 'PrgEnv-cray',
            'target_systems': ['lumi'],
            'modules': [
                'PrgEnv-cray',
                'cray-mpich'
            ],
        },
        {
            'name': 'PrgEnv-gnu',
            'target_systems': ['lumi'],
            'modules': [
                'PrgEnv-gnu',
                'cray-mpich'
            ],
        },
        {
            'name': 'PrgEnv-aocc',
            'target_systems': ['lumi'],
            'modules': [
                'PrgEnv-aocc',
                'cray-mpich'
            ],
        },
    ],
    'logging': [
        {
            'level': 'debug',
            'handlers': [
                {
                    'type': 'file',
                    'name': 'reframe.log',
                    'level': 'debug',
                    'format': '[%(asctime)s] %(levelname)s: %(check_name)s: %(message)s',  # noqa: E501
                    'append': False
                },
                {
                    'type': 'stream',
                    'name': 'stdout',
                    'level': 'info',
                    'format': '%(message)s'
                },
                {
                    'type': 'file',
                    'name': 'reframe.out',
                    'level': 'info',
                    'format': '%(message)s',
                    'append': False
                }
            ],
            'handlers_perflog': [
                {
                    'type': 'filelog',
                    'prefix': '%(check_system)s/%(check_partition)s',
                    'level': 'info',
                    'format': '%(asctime)s|reframe %(version)s|%(check_info)s|jobid=%(check_jobid)s|%(check_perf_var)s=%(check_perf_value)s|ref=%(check_perf_ref)s (l=%(check_perf_lower_thres)s, u=%(check_perf_upper_thres)s)',  # noqa: E501
                    'append': True
                }
            ]
        }
    ],
    'modes': [
        {
            'name': 'maintenance',
            'options': [
                '--exec-policy=async',
                '--reservation=maintenance',
                '--save-log-files',
                '--tag=acceptance',
                '--timestamp=%F_%H-%M-%S'
            ]
        },
        {
            'name': 'production',
            'options': [
                '--exec-policy=async',
                '--strict',
                '--output=$APPS/UES/$USER/regression/production',
                '--logdir=$APPS/UES/$USER/regression/production/logs',
                '--stage=$SCRATCH/regression/production/stage',
                '--save-log-files',
                '--tag=production',
                '--timestamp=%F_%H-%M-%S'
            ]
        }
    ],
    'general': [
        {
            'check_search_path': [
                'checks/'
            ],
            'check_search_recursive': True
        }
    ]
}
