spack:
# They are currently buildable,
# because cray-libsci and cray-fftw are not in use (see packages.yaml)
  packages:
    'fftw-api:':
      buildable: true
  definitions:
  - parallel:
    
    # boost: might need several boosts with different stadards
    - boost@1.86.0 +mpi +numpy +python cxxstd=14
    # IA cxxstd=98 is replaced by cxxstd=11 in the following line since boost@1.85.0 does not support cxxstd=98
    - boost@1.86.0 +mpi +numpy +python cxxstd=11
    - hpx@1.9.1 +async_mpi malloc=jemalloc max_cpu_count=128 networking=mpi 
      build_type=Release ^boost
    
    # rather silly kokkos has std=98,11, etc setting cxxstd. BUT all other packages 
    # use the flag cxxstd ... Update in recipes might fix this but for the moment, we fix 
    # this in our repo
    # cxxstd=14 is not a variant in kokkos@3.7.02
    - kokkos@4.4.01 ~rocm +hwloc +memkind +numactl +openmp +tuning build_type=Release
    
    # for hpx must explicitly set openmp off 
    - kokkos@4.4.01 +hwloc +memkind +numactl +hpx +hpx_async_dispatch +tuning ~openmp
      build_type=Release ^hpx@1.9.1 +async_mpi max_cpu_count=128 networking=mpi build_type=Release
    - metis@5.1.0 ~int64~real64
    - metis@5.1.0 +int64+real64
    - parmetis@4.0.3 ~int64
    - parmetis@4.0.3 +int64
    - scotch@7.0.4 ~metis
    - scotch@7.0.4 +metis   
  # because of odd concretization of packages with python dependences defaulting to 3.9.9 and not the 
  # version specified in the packages.yaml, separate packages between those with python dep and those without
  - numerical-with-python:
    
    # updates to lapack/blas for new hardware like GPUs  
    # TODO: no need for magma in phase 1 as it is GPU only 
    #- magma@2.5.4 
    # for plasma@ setting blas and lapack buildable to true in spack.yaml file
    # issue with building with blas and lapack using cray-libsci. 
    # Moving to openblas as default address this issue 
    - plasma@23.8.2 build_type=Release ^openblas
    
    - plumed@2.9.0
    
    # some heavier numerical library builds 
    - opencv@4.10.0 build_type=Release
    
      #    - opencv@3.4.18 build_type=Release
    - trilinos@15.0.0 ~rocm +adios2 +openmp +python ~cuda ^adios2@2.9.2 build_type=Release
      ^hdf5@1.14.3 build_type=Release
      #- trilinos@15.1.0 ~rocm +adios2 +openmp +python +tpetra +kokkos +zoltan ~cuda ^adios2@2.9.2 build_type=Release failed with /usr/include/stdlib.h:31:10: fatal error: 'stddef.h' file not found 

    #- trilinos@16.0.0 ~rocm +adios2 +openmp +python +tpetra +kokkos +zoltan ~cuda ^adios2@2.9.2 build_type=Release

  - petsc-set:    
    # TODO: currently unable to configure petsc with trilinos. 
    # not clear if issue is with petsc or the version of trilinos
    # for the moment trilinos disabled 
    #- petsc@3.15.5 +fftw +trilinos +hwloc +openmp +complex ~cuda
    - petsc@3.21.1  
  - numerical:
    
    # - openblas@0.3.21 threads=openmp # PLACEHOLDER - please look at scripts/install_environments.sh
    - netlib-lapack@3.11.0 build_type=Release
    - netlib-scalapack@2.2.0
    - blaspp@2024.10.26 ~cuda build_type=Release ^openblas
    - eigen@3.4.0 build_type=Release # charris: build ok on Joey 2021-12-16
    - fftw@2.1.5 +openmp precision=float,double # fftw 2 does not support long doubles
    - fftw@3.3.10 +openmp precision=float,double,long_double
    - gsl@2.8
  - amd-with-python:
    
    # AMD AOCL
    - amdblis@4.2 threads=openmp
    - amdblis@4.2
    
    # variant below useful for at least one PaCER
    - amdlibflame@4.2
    - amdscalapack@4.2 build_type=Release
    - aocl-sparse@4.2 build_type=Release
  - amd:
    - amdfftw@4.2 precision=float,double,long_double
  specs:
  - matrix:
    - [$parallel]
    - ['%gcc@14.2.0']
    - [^python@3.11.6]
    - [target=zen3]
  - matrix:
    - [$petsc-set]
    - ['%gcc@14.2.0']
    - [^python@3.11.6 ^fftw@3.3.10]
    - [+complex, ~complex]
    - [+fftw +hwloc +openmp ~cuda]
    - [~trilinos]  # fails with +trilinos - Unable to generate list of Trilinos Libraries
    - [target=zen3]      
  - matrix:
    - [$numerical]
    - ['%gcc@14.2.0']
    - [target=zen3]
  - matrix:
    - [$numerical-with-python]
    - ['%gcc@14.2.0']
    - [^python@3.11.6 +optimizations+zlib]
    - [target=zen3]
# for now don't build amd math libraries
  #- matrix:
  #  - [$amd]
  #  - ['%gcc@14.2.0', '%cce@15.0.1', '%aocc@3.2.0']
  #  - [target=zen3]
  #- matrix:
  #  - [$amd-with-python]
  #  - ['%gcc@14.2.0', '%cce@15.0.1', '%aocc@3.2.0']
  #  - [^python@3.11.6]
  #  - [target=zen3]
  view: false
